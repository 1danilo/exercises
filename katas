
/*
kata #1 - Write a function which converts the input string to uppercase.

function makeUpperCase(str) {
  return str.toUpperCase()
}

//alternative solution
const makeUpperCase = str => str.toUpperCase();
*/


/*
kata #2 - Complete the function that takes two integers (a, b, where a < b) and return an array of all integers between the input parameters, including them.
function between(a, b) {
  // your code here
  arr = []
  for(i = a;i <= b; i++){ 
      arr.push(i)
  }
  return arr
}
*/

/*
kata #3 - Write a function to convert a name into initials. This kata strictly takes two words with one space in between them.
The output should be two capital letters with a dot separating them.
It should look like this:
Sam Harris => S.H
Patrick Feeney => P.F
*/

/*
Beginner - Lost Without a Map
Given an array of integers, return a new array with each value doubled.

For example:

[1, 2, 3] --> [2, 4, 6]

function maps(x){
let numbersTimeTwo = [];
for(let i = 0; i < x.length; i++) {
  numbersTimeTwo.push(x[i]*2);
}
return numbersTimeTwo
  }

or

function maps(x){
  return x.map(n => n * 2);
}

or

maps = x => x.map(e => e * 2);

or

const maps = arr => arr.map( x => x * 2 )
*/



/*
Opposites Attract
Timmy & Sarah think they are in love, but around where they live, they will only know once they pick a flower each. If one of the flowers has an even number of petals and the other has an odd number of petals it means they are in love.
Write a function that will take the number of petals of each flower and return true if they are in love and false if they aren't.

function lovefunc(flower1, flower2){
  if (flower1 % 2 === 0 && flower2 % 2 === 1 || flower1 % 2 === 1 && flower2 % 2 === 0) {
     return true;
} else {
  return false
}
  }

or

function lovefunc(flower1, flower2){
  return flower1 % 2 !== flower2 % 2;
}

or 

function lovefunc(flower1, flower2){
  return (flower1 + flower2) % 2 === 1
}

function lovefunc(flower1, flower2){
  return (flower1 + flower2) % 2 == 1;
}


*/
All Star Code Challenge #18
This Kata is intended as a small challenge for my students

All Star Code Challenge #18

Create a function that accepts 2 string arguments and returns an integer of the count of occurrences the 2nd argument is found in the first one.

If no occurrences can be found, a count of 0 should be returned.

("Hello", "o")  ==>  1
("Hello", "l")  ==>  2
("", "z")       ==>  0
Notes:

The first argument can be an empty string
The second string argument will always be of length 1

function strCount(str, letter){  
for (let i = 0; i <= str.length; i++) {
    return str.split('').filter((x) => letter === x).length;
 }
}

or
function strCount(str, letter){  
  
  let count = 0;
  
  for (let i = 0; i < str.length; i++) {
    if (str[i] == letter)
      count++;
  }
  
  return count;
  
}

or
const strCount = (str, letter) => str.split(letter).length - 1;

/*

21/set
not able to solve it yet
6 kyu - Break camelCase
Complete the solution so that the function will break up camel casing, using a space between words.

Example
"camelCasing"  =>  "camel Casing"
"identifier"   =>  "identifier"
""             =>  ""

*/
